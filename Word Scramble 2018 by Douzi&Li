//**************************************************************************************************************
//This is a Word Jumble Game.                                                                                  *
//The user will see a group of scrambling letters in random order.                                             *
//The user will be asked to reconstruct the word and guess the word.                                           *
//There will be THREE attempts OR the user can choose to QUIT the game.                                        *
//While failing TWICE, the program will ask the user if he want to see a HINT                                  *
//If so, program will give the user the hint.If not, the user can continue taking his last attempt.            *
//There will be SIX words in total and each word will have its hint.                                           *
//After Three attempts, no matter the user won or not, program will ask him if the user wants another try.     *
//Maybe I will add a TIMER (60 seconds), or maybe not.                                                         *
//This program is created by Douzi Ma and Li Lin.                                                              *
//NOTE:IN THE PRES,PICK OUT TWO THINGS WE'VE LEARNED IN CLASS.                                                 *
//**************************************************************************************************************

//header files
#include<iostream>
#include<string>
#include<cstdlib>
#include<ctime>
#include <windows.h>// u need to include dos.h header file to use it. the value pass to the function is taken in seconds.

using namespace std;

//Prototypes
string printMessage(string);

int main()
{
	//*****************************************************************************
	//First, create a list of the words, which is 6 words in this case.           *
	//The six words will be: eyebrow, guitar, jelly, dolphin, rainbow, fire.      *
	//*****************************************************************************

	//Using the enumurators
	enum field { WORD, HINT, NUM_FIELD };
	const int NUM_WORDS = 6;
	
	//Here, use a two dimensional array to store the words and the hints.
	const string WORDS[NUM_WORDS][NUM_FIELD] =
	{
		{"eyebrow","It is on your face"},
	{"guitar","It is a musical instrument"},
	{"jelly","It is soft and semisolid"},
	{"dolphin","It is a memmal which does not live on the land"},
	{"rainbow","It is colorful"},
	{"fire","it releases light"}
	};

	//****************************************
	//Pick a random word from the array.     *
	//****************************************

	//First,initialize the random seed       
	srand(static_cast<unsigned int>(time(0)));
	//generates a random number between 0 and 6
	int randomIndex = (rand() % NUM_WORDS);
	//This is the word that system has picked
	string pickedWord = WORDS[randomIndex][WORD];
	//This is the hint corresponded to the picked word.
	string pickedHint = WORDS[randomIndex][HINT];

	//**************************************************************
	//Next, create a scrambled version of the words by rand()%     *
	//**************************************************************

	//declare a string variable of the scrambled words
	string scrambled = pickedWord;
	//each words' length are different,so we need a for loop to do the scramble each word
	int length = scrambled.size(); 
	for (int i = 0; i < length; i++)
	{
		int x = (rand() % length);
		int y = (rand() % length);
		char tempWord = scrambled[x];
		scrambled[x] = scrambled[y];
		scrambled[y] = tempWord;
	}

	//Print out the message by calling printMessage function
	printMessage("Welcome to the *WORD SCRAMBLE* game!!!\n");
	printMessage("Guess the word by reconstrcuting the scrambled letters^0^\n");
	printMessage("You will have three attempts to guess the word\n");
	printMessage("If you want to quit the game, just type 'quit'\n");
	printMessage("Press enter when you are ready.\n");

	//Game starts!
	string guess;
	cout<<"The first word is: "<<scrambled<<endl;
	printMessage("Your guess is:");
	cin >> guess;

	//if the first guess is wrong and the user did not choose to quit
	while ((guess != scrambled) && (guess != "quit"))
	{
		
		for (int counter = 3; counter >1; counter--)
		{
			cout << "Sorry, very close. Please try again." << endl;
			cout << "You have " << (counter-1) << " more try" << endl;
			cout << "Your guess is:" << endl;
			cin >> guess;
			if (counter = 2)
			{
				cout << "Do you want to a hint?" << endl;
				cout << "Enter 'hint'for a hint" << endl;
				cout << "Or enter any key for 'I want to guess by myself!'" << endl;
				cin >> guess;
				if (guess == "hint")
				{
					cout << pickedHint << endl;
				}
				else
				{
					cout << "This is your last try" << endl;
					cout << "Your guess is:" << endl;
					cin >> guess;
				}

				}
		}
	}

int time(int seconds); // function that makes the stop watch work.
	clock_t  Begin, End;
	{
		Begin = clock() * CLK_TCK; //Timer Start
		End = clock() * CLK_TCK; // Timer stop
		for (int seconds = 60; seconds >= 0; seconds--)
        
			

			// I wanna cout to output an int with leading zeros, so the value 1 would be printed as 01.
			// prints out time. first, it prints out the inputted time, goes through the loop, and prints out the approriate values based on the loops function.
		{
			const int i = seconds;
			// It is used to execute a system command by passing the command as argument to this function.
			system("cls");

			// write floaing-point value in fixed-point notation ,and the output is padded to the field width by inserting fill characters at the beginning.
			cout << fixed << right;
			// It will make the program sleep for number of seconds provided as arguments to the function.
			Sleep(1000);

			//system call to clear the screen
		
			cout << setfill('0') << setw(2) << i / (60 * 60) << ":" << setfill('0') << setw(2) << i / 60 << ":" << setfill('0') << setw(2) << i % 60;
			cout << "\n";
		
		}
		 
	}

	return 0;

}

//PrintMessage function: cout the 'Instruction' messages
string printMessage(string A)
{
	cout << A << endl;
	return A;
	
}
